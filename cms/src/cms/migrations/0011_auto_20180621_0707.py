# Generated by Django 2.0.2 on 2018-06-21 07:07

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('cms', '0010_auto_20180521_1535'),
    ]

    operations = [
        migrations.AlterField(
            model_name='authorlanguage',
            name='author',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to='cms.AuthorPage'),
        ),
        migrations.AlterField(
            model_name='authorlanguage',
            name='language',
            field=models.ForeignKey(help_text='Language that the author has been active in.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authors', to='cms.LanguagePage', verbose_name='Language'),
        ),
        migrations.AlterField(
            model_name='authorliterarycategory',
            name='author',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='literary_categories', to='cms.AuthorPage'),
        ),
        migrations.AlterField(
            model_name='authorliteraryperiod',
            name='author',
            field=modelcluster.fields.ParentalKey(help_text='Author that this mapping is referencing.', on_delete=django.db.models.deletion.CASCADE, related_name='literary_periods', to='cms.AuthorPage', verbose_name='Author'),
        ),
        migrations.AlterField(
            model_name='level1page',
            name='biography',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, default=[], help_text='An introductory biography of the author aimed at laymen.', verbose_name='Biography'),
        ),
        migrations.AlterField(
            model_name='level1page',
            name='biography_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='An introductory biography of the author aimed at laymen.', verbose_name='Biography'),
        ),
        migrations.AlterField(
            model_name='level1page',
            name='biography_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='An introductory biography of the author aimed at laymen.', verbose_name='Biography'),
        ),
        migrations.AlterField(
            model_name='level1page',
            name='works',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='An introduction to the works of the author aimed at laymen.', verbose_name='Literary works'),
        ),
        migrations.AlterField(
            model_name='level1page',
            name='works_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='An introduction to the works of the author aimed at laymen.', verbose_name='Literary works'),
        ),
        migrations.AlterField(
            model_name='level1page',
            name='works_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='An introduction to the works of the author aimed at laymen.', verbose_name='Literary works'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='biography',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='Biography', verbose_name='Biography'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='biography_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='An introductory biography of the author aimed at laymen.', verbose_name='Biography'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='biography_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='An introductory biography of the author aimed at laymen.', verbose_name='Biography'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='connections',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A short description of important connections (i.e. people) that have been mentioned in the text.', verbose_name='Connections'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='connections_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A short description of important connections (i.e. people) that have been mentioned in the text.', verbose_name='Connections'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='connections_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A short description of important connections (i.e. people) that have been mentioned in the text.', verbose_name='Connections'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='full_texts',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='Short full texts (i.e. poems, short stories) by the author that have been mentioned or partially quoted in the text about the author.', verbose_name='Full texts'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='full_texts_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='Short full texts (i.e. poems, short stories) by the author that have been mentioned or partially quoted in the text about the author.', verbose_name='Full texts'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='full_texts_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='Short full texts (i.e. poems, short stories) by the author that have been mentioned or partially quoted in the text about the author.', verbose_name='Full texts'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='reception',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A more in-depth description for interested users on how the author has been received.', verbose_name='Reception'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='reception_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A more in-depth description for interested users on how the author has been received.', verbose_name='Reception'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='reception_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A more in-depth description for interested users on how the author has been received.', verbose_name='Reception'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='works',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='An introduction to the works of the author aimed at laymen.', verbose_name='Literary works'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='works_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='An introduction to the works of the author aimed at laymen.', verbose_name='Literary works'),
        ),
        migrations.AlterField(
            model_name='level2page',
            name='works_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='An introduction to the works of the author aimed at laymen.', verbose_name='Literary works'),
        ),
        migrations.AlterField(
            model_name='level3page',
            name='primary_literature',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A more in-depth presentation of primary literature of the author for an academic user.', verbose_name='Primary literature'),
        ),
        migrations.AlterField(
            model_name='level3page',
            name='primary_literature_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A more in-depth presentation of primary literature of the author for an academic user.', verbose_name='Primary literature'),
        ),
        migrations.AlterField(
            model_name='level3page',
            name='primary_literature_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A more in-depth presentation of primary literature of the author for an academic user.', verbose_name='Primary literature'),
        ),
        migrations.AlterField(
            model_name='level3page',
            name='secondary_literature',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='Further secondary literature about the author and his works aimed at academic users.', verbose_name='Secondary literature'),
        ),
        migrations.AlterField(
            model_name='level3page',
            name='secondary_literature_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='Further secondary literature about the author and his works aimed at academic users.', verbose_name='Secondary literature'),
        ),
        migrations.AlterField(
            model_name='level3page',
            name='secondary_literature_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='Further secondary literature about the author and his works aimed at academic users.', verbose_name='Secondary literature'),
        ),
        migrations.AlterField(
            model_name='level3page',
            name='testimony',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='Extant documents about the author by other people, e.g. correspondence with the author, lecture notes.', verbose_name='Testimony'),
        ),
        migrations.AlterField(
            model_name='level3page',
            name='testimony_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='Extant documents about the author by other people, e.g. correspondence with the author, lecture notes.', verbose_name='Testimony'),
        ),
        migrations.AlterField(
            model_name='level3page',
            name='testimony_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='Extant documents about the author by other people, e.g. correspondence with the author, lecture notes.', verbose_name='Testimony'),
        ),
        migrations.AlterField(
            model_name='memorialsitepage',
            name='description',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A description of the memorial site and its significance to the referenced authors.', verbose_name='I. Memorial site'),
        ),
        migrations.AlterField(
            model_name='memorialsitepage',
            name='description_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A description of the memorial site and its significance to the referenced authors.', verbose_name='I. Memorial site'),
        ),
        migrations.AlterField(
            model_name='memorialsitepage',
            name='description_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A description of the memorial site and its significance to the referenced authors.', verbose_name='I. Memorial site'),
        ),
        migrations.AlterField(
            model_name='memorialsitepage',
            name='detailed_description',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A detailed description of the memorial site and its significance to the referenced authors.', verbose_name='II. Memorial site'),
        ),
        migrations.AlterField(
            model_name='memorialsitepage',
            name='detailed_description_cs',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A detailed description of the memorial site and its significance to the referenced authors.', verbose_name='II. Memorial site'),
        ),
        migrations.AlterField(
            model_name='memorialsitepage',
            name='detailed_description_de',
            field=wagtail.core.fields.StreamField([('paragraph', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(help_text='An optional heading to structure comprehensive text content.', label='Optional heading', required=False)), ('images', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(), default=[], help_text='Images that will be displayed alongside the text content of the paragraph.', label='Images')), ('content', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'footnote', 'ol', 'ul', 'hr', 'link', 'blockquote'], help_text='The actual text content of this paragraph.', label='Content', required=True)), ('footnotes', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('tag', wagtail.core.blocks.CharBlock(help_text="A tag that allows to link the footnote with the paragraphs text content in the form '[tag]'.", label='Linkable tag', required=False)), ('footnote', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'strikethrough', 'link'], help_text='Citations, comments and references.', label='Footnote'))]), default=[], help_text='Optional footnotes to the text content.', label='Footnotes')), ('editor', wagtail.core.blocks.CharBlock(help_text='Author or translator of the content.', label='Editor', required=True))]))], blank=True, help_text='A detailed description of the memorial site and its significance to the referenced authors.', verbose_name='II. Memorial site'),
        ),
    ]
