# Generated by Django 2.0.2 on 2018-07-06 13:13

import uuid

from django.db import migrations, transaction
from django.db.utils import IntegrityError

def init_author_tags(apps, schema_editor):
    """Maps every tag page to a new model tag."""
    LiteraryCategoryPage = apps.get_model("cms", "LiteraryCategoryPage")
    GenreTag = apps.get_model("cms", "GenreTag")
    for category in LiteraryCategoryPage.objects.all():
        try:
            with transaction.atomic():
                GenreTag.objects.create(
                    title=category.title,
                    title_de=category.title_de or uuid.uuid4(),
                    title_cs=category.title_cs or uuid.uuid4(),
                )
        except IntegrityError:
            pass

    LanguagePage = apps.get_model("cms", "LanguagePage")
    LanguageTag = apps.get_model("cms", "LanguageTag")
    for language in LanguagePage.objects.all():
        try:
            with transaction.atomic():
                LanguageTag.objects.create(
                    title=language.title,
                    title_de=language.title_de or uuid.uuid4(),
                    title_cs=language.title_cs or uuid.uuid4(),
                )
        except IntegrityError:
            pass

    LiteraryPeriodPage = apps.get_model("cms", "LiteraryPeriodPage")
    LiteraryPeriodTag = apps.get_model("cms", "LiteraryPeriodTag")
    for idx, literary_period in enumerate(LiteraryPeriodPage.objects.all()):
        try:
            with transaction.atomic():
                LiteraryPeriodTag.objects.create(
                    title=literary_period.title,
                    title_de=literary_period.title_de or uuid.uuid4(),
                    title_cs=literary_period.title_cs or uuid.uuid4(),
                    sort_order=idx
                )
        except IntegrityError:
            pass

def deinit_author_tags(apps, schema_editor):
    GenreTag = apps.get_model("cms", "GenreTag")
    GenreTag.objects.all().delete()
    LanguageTag = apps.get_model("cms", "LanguageTag")
    LanguageTag.objects.all().delete()
    LiteraryPeriodTag = apps.get_model("cms", "LiteraryPeriodTag")
    LiteraryPeriodTag.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('cms', '0014_authorpage_literary_period_tags'),
    ]

    operations = [
        migrations.RunPython(init_author_tags, deinit_author_tags),
    ]
